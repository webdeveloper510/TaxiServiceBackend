{
    "auth": {
        "error": {
            "tokenError": "Your session has expired or the token is invalid. Please log in again.",
            "authTokenVerificationFailed": "Authentication token verification failed. Please re-authenticate",
            "tokenExpired": "Your session has expired. Please log in again",
            "blockedByAdmin": "Your account has been blocked by the administration. Please contact support for assistance",
            "companyAccessWithdrawn": "The company has withdrawn access to the account"
        }
    },
    "addDriver": {
        "error": {
            "nickNameAlreadyInUse": "Unfortunately, this nickname is taken. Please use a different nickname.",
            "emailAlreadyInUse": "Email address is already associated with an existing account",
            "phoneAlreadyInUse": "This phone number is already associated with an existing account",
            "emailRegisteredAsCompany": "This email is already registered under a Company account. Please sign in to proceed with driver registration",
            "phoneRegisteredAsCompany": "This phone is already registered under a Company account. Please sign in to proceed with driver registration",
            "companyHasOwnDriver": "This company already has their own driver",
            "saveFailed": "An error occurred while saving your data. Please try again.",
            "emailAssociatedWithDeletedDriver": "This email ({{email}}) is associated with a previously deleted driver. Please restore the driver from the deleted list instead of creating a new account."
        },
        "success": {
            "driverCreated": "Driver account has been created successfully."
        }
    },
    "deleteDriver": {
        "error": {
            "unableToDeleteDriver": "An error occurred while deleting the driver."
        },
        "success": {
            "driverDeleted": "Driver has been deleted successfully."
        }
    },
    "getDrivers": {
        "error": {
            "noDriversFoundForAgencyUser": "No drivers are associated with the agency user."
        },
        "success": {
            "driverListRetrieved": "Driver list has been successfully fetched."
        }
    },
    "restoreDriver": {
        "error": {
            "driverNotExist": "he specified driver does not exist"
        },
        "success": {
            "driverRestored": "Driver has been successfully restored."
        }
    },
    "getDriverDetail": {
        "error": {
            "unableToFetchDriverDetails": "An error occurred while fetching driver details."
        },
        "success": {
            "driverDetailsFetched": "Driver details fetched successfully."
        }
    },
    "updateDriver": {
        "error": {
            "driverNotFound": "The requested driver could not be located.",
            "emailExistsWithAnotherAccount": "This email is linked to another account. Please choose a different email.",
            "phoneExistsWithAnotherAccount": "This phone is linked to another account. Please choose a different phone.",
            "cannotGoOfflineWithActiveTrip": "You can't go offline while you have an active trip in progress. Please complete the trip first."
        },
        "success": {
            "driverAccountUpdated": "Driver account has been updated successfully",
            "emailDocumentUnderReviewConetnt": {
                "welcomeToIDispatch": "Welcome to iDispatch!",
                "driverRegistrationUnderReview": "Thank you for registering as a driver with us. Your driver profile is currently under review. Once approved, you will receive an email notification and be able to log in. We appreciate your patience.",
                "visitAccountAndManage": "Start Managing Your Account"
            }
        }
    },
    "getTokenDetail": {
        "error": {
            "unableToFetchDetail": "Unable to retrieve the details at this time. Please try again later."
        },
        "success": {
            "informationRetrieved": "Information retrieved successfully."
        }
    },
    "addTrip": {
        "error": {
            "noActivePlanForTripCreation": "Trip creation is not allowed without an active plan. Please subscribe to a plan first.",
            "unableToCreateTrip": "An error occurred while creating the trip. Please try again later.",
            "companyAccessRevoked": "Access for the company has been revoked",
            "invalidOrNonexistentCompany": "The specified company is invalid or does not exist"
        },
        "socket": {
            "tripCreatedRefresh": "A new trip has been created. Kindly refresh to load the latest information."
        },
        "success": {
            "tripAdded": "The trip has been created successfully"
        }
    },
    "editTrip": {
        "error": {
            "noActivePlanForTripCreation": "Trip creation is not allowed without an active plan. Please subscribe to a plan first.",
            "unableToUpdateTrip": "An error occurred while updating the trip. Please try again later.",
            "companyAccessRevoked": "Access for the company has been revoked",
            "invalidOrNonexistentCompany": "The specified company is invalid or does not exist"
        },
        "socket": {
            "tripChangedRefresh": "The trip has been updated. Kindly refresh to load the latest information.",
            "tripRetrivedByCompany": "Your trip request has been retrieved by the company."
        },
        "notification": {
            "tripRetrievedByCompanyMessage": "Trip ({{trip_id}}) has been retrieved by the company.",
            "tripRetrievedByCompanyTitle": "Trip retrieved ."
        },
        "success": {
            "tripUpdated": "The trip has been updated successfully"
        }
    },
    "deleteTrip": {
        "error": {
            "unableToDeleteTrip": "An error occurred while attempting to delete the trip"
        },
        "success": {
            "deletedSuccessfully": "The trip has been delete successfully"
        }
    },
    "getTrip": {
        "error": {
            "unableToRetrieveTrip": "An error occurred while fetching trips."
        },
        "success": {
            "tripDataRetrieved": "Trip details retrieved successfully",
            "dashboardCountsRetrieved": "Dashboard counts retrieved successfully."
        }
    },
    "noShowUser": {
        "success": {
            "driverUnableToLocateCustomer": "Driver could not find the customer at the specified location for Trip ID: {{trip_id}}"
        }
    },
    "switchProfile": {
        "switchToDriver": {
            "error": {
                "noDriverProfile": "You don't have driver profile",
                "driverBlocked": "The driver has been blocked. If you believe this is an error, please contact the support team for assistance"
            },
            "success": {
                "profileSwitched": "Profile switched successfully"
            }
        },
        "switchToCompanyPertner": {
            "error": {
                "noDriverProfile": "You don't have driver profile",
                "companyBlocked": "This company has been blocked by administration.",
                "noPartnerAccessToCompany": "You do not have partner access to this company."
            },
            "success": {
                "profileSwitched": "Profile switched successfully"
            }
        }
    },
    "driverCancelTripReason": {
        "error": {
            "invalidTrip": "This trip is not valid or no longer available.",
            "tripNotUnderCancellationReview": "This trip is not currently under cancellation review.",
            "tripUnderCancellationReview": "This trip is already under cancellation review."
        },
        "socket": {
            "tripChangedRefresh": "The trip has been updated. Kindly refresh to load the latest information.",
            "tripCancelLationApproved": "Your cancellation request for Trip ID {{trip_id}} has been approved by the company.",
            "tripCancelLationRejected": "The company has rejected your cancellation request for Trip ID {{trip_id}}. Kindly continue with the scheduled trip.",
            "tripCancelLationStatusMessage": "Trip {{trip_id}} cancellation request has been {{tripDecisionStatus}}",
            "tripCancellationStatusTitle": "Trip Cancellation Request Update"
        },
        "success": {
            "tripCancellationUpdated": "The cancellation request for the trip has been successfully updated",
            "tripCancellationRequestSubmitted": "The trip cancellation request has been submitted successfully. The company will review the reason and provide an update shortly."
        }
    },
    "customerCancelTrip": {
        "error": {
            "invalidTrip": "This trip is not valid or no longer available.",
            "tripAlreadyCancelledByUser": "This trip has already been cancelled by the user."
        },
        "socket": {
            "tripChangedRefresh": "The trip has been updated. Kindly refresh to load the latest information.",
            "tripCancelledByCustomer": "Trip has been cancelled by {{customerName}}.",
            "tripCancellationRejected": "The company has rejected your cancellation request for Trip ID {{trip_id}}. Kindly continue with the scheduled trip.",
            "tripCancellationStatusMessage": "Trip {{trip_id}} cancellation request has been {{tripDecisionStatus}}",
            "tripCancellationStatusTitle": "Trip Cancellation Request Update"
        },
        "notification": {
            "tripCancelledByCustomerMessage": "Trip ID {{trip_id}} has been cancelled by customer ({{customerName}}).",
            "tripCancelledByCustomerTitle": "Trip ({{trip_id}}) Canceled by Customer.",
            "tripCancelledByCustomerForCompanyAccessTitle": "Trip: {{trip_id}}( Company Access:- {{company_name}} Canceled by Customer.",
            "tripCancelledByCustomerForPartnerAccessTitle": "Trip: {{trip_id}}( Partner Account:- {{company_name}} Canceled by Customer."
        },
        "success": {
            "tripCancellationSubmitted": "Your trip cancellation request has been submitted."
        }
    },
    "addAgency": {
        "error": {
            "unableToSaveData": "An error occurred while saving data",
            "dataSaved": "Data has been saved successfully"
        },
        "success": {
            "dataSaved": "Data has been saved successfully"
        }
    }
}